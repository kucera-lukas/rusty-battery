name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always
  CARGO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  TARGET: x86_64-unknown-linux-gnu

jobs:
  release:
    name: ${{ matrix.os }} / ${{ matrix.toolchain }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        toolchain: [ nightly ]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.3.4

      - name: Install minimal ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ env.TARGET }}

      - name: Create Bin Directory
        run: mkdir bin --verbose

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ env.TARGET }} -Z unstable-options --out-dir bin

      - name: Archive Binary
        uses: actions/upload-artifact@v1
        with:
          name: rusty-battery-${{ env.TARGET }}
          path: bin/rusty-battery

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/rusty-battery
          asset_name: rusty-battery-${{ env.TARGET }}
          asset_content_type: application/zip

  publish:
    name: ${{ matrix.os }} / ${{ matrix.toolchain }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        toolchain: [ stable ]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    needs: [ release ]

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Install minimal ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Cargo Publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ env.CARGO_TOKEN }}
